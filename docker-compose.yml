version: '3.2'

services:

    nginx:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/nginx
            dockerfile: Dockerfile.nginx
        ports:
            - "80:80"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        restart: unless-stopped
#        depends_on:
#          - kerberos
#          - historian
#          - swarm-watcher
#          - configurator

    configurator:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/configurator
            dockerfile: Dockerfile.configurator
        volumes:
            - ./services/configurator/code:/code
            - ./configs:/service-configs
            - ./data/:/data-all:ro
            - /var/run/docker.sock:/var/run/docker.sock
        restart: unless-stopped

    mqtt-server:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/mqtt-server
            dockerfile: Dockerfile.mqtt-server
        volumes:
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./data/mqtt-server/db:/var/lib/mosquitto
            - ./configs:/service-configs
        restart: unless-stopped

    health-reporter:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/health-reporter
            dockerfile: Dockerfile.health-reporter
        volumes:
            - ./services/health-reporter/code:/code
            - ./data/:/data-all:ro
            - ./data/health-reporter/:/mydata
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        privileged: true
        restart: unless-stopped

    kerberos:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/kerberos
            dockerfile: Dockerfile.kerberos
        volumes:
            - ./services/kerberos/code:/code
            - ./services/kerberos/resources:/resources
            - ./configs/kerberos/machinery:/etc/opt/kerberosio/config
            - ./configs/kerberos/web:/web-config-dist
            - ./logs/kerberos:/etc/opt/kerberosio/logs
            - ./data/kerberos/capture:/etc/opt/kerberosio/capture
            - ./data/kerberos/h264:/etc/opt/kerberosio/h264
            - ./data/kerberos/web-storage-sessions:/var/www/web/storage/framework/sessions
#            - ./data/services-health-reports/kerberos:/data-services-health-reports-kerberos
            - ./data/kerberos:/mydata
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        privileged: true
        restart: unless-stopped

    email-notification:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/email-notification
            dockerfile: Dockerfile.email-notification
        volumes:
            - ./services/email-notification/code:/code
            - ./data/email-notification/:/mydata
            - ./data/kerberos/capture:/etc/opt/kerberosio/capture
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        restart: unless-stopped

    swarm-watcher:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/swarm-watcher
            dockerfile: Dockerfile.swarm-watcher
        volumes:
            - ./services/swarm-watcher/code:/code
            - ./data/email-notification/:/data-email-notification
            - ./data/swarm-watcher/:/mydata
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        restart: unless-stopped

    ngrok:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/ngrok
            dockerfile: Dockerfile.ngrok
        volumes:
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
#            - ./data/services-health-reports/ngrok:/data-services-health-reports-ngrok
            - ./data/ngrok:/mydata
        restart: unless-stopped

    thermometer:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/thermometer
            dockerfile: Dockerfile.thermometer
        volumes:
            - ./services/thermometer/code:/code
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
            - ./data/thermometer:/mydata
        restart: unless-stopped
        privileged: true

    historian:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/historian
#            dockerfile: services/historian/Dockerfile
        volumes:
            - ./services/historian/code:/code
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
            - ./data/historian:/mydata
        restart: unless-stopped

    alpr:
        env_file:
            - configs/environment.conf
        build:
            context: ./services/alpr
            dockerfile: Dockerfile.alpr
        volumes:
            - ./data/kerberos/capture:/etc/opt/kerberosio/capture
            - ./data/alpr/:/mydata
            - ./data/email-notification/:/data-email-notification
            - ./services/alpr/code:/code
            - /etc/timezone:/etc/timezone:ro
            - /etc/localtime:/etc/localtime:ro
            - ./configs:/service-configs:ro
        restart: unless-stopped


    #  streamer-rtsp:
    #    build:
    #      context: ./services/streamer-rtsp
    #      dockerfile: Dockerfile.streamer-rtsp
    #    ports:
    #      - "9000:9000"
    #    devices:
    #      - "/dev/video0"
    #      - "/dev/vchiq"
    #      - "/dev/vcsm"
    #    volumes:
    #      - "/opt/vc:/opt/vc"
    #    privileged: true

    #  streamer-mjpg:
    #    build:
    #      context: ./services/streamer-mjpeg
    #      dockerfile: Dockerfile.streamer-mjpg
    #    ports:
    #      - "9000:9000"
    #    privileged: true
    #    environment:
    #      - STREAM_PORT=9000
    #      - STREAM_WIDTH=1280
    #      - STREAM_HEIGHT=720
    #      - STREAM_FPS=10
    #    restart: unless-stopped


    #  cadvisor:
    #    image: unibaktr/cadvisor
    #    ports:
    #      - "8090:8080"
    #    privileged: true
    #    volumes:
    #     - /:/rootfs:ro
    #     - /var/run:/var/run:rw
    #     - /sys:/sys:ro
    #     - /var/lib/docker/:/var/lib/docker:ro
    #     - /dev/disk/:/dev/disk:ro
    #     - /etc/timezone:/etc/timezone:ro
    #     - /etc/localtime:/etc/localtime:ro
    #    restart: unless-stopped

    #######################################
    # UI manager for containers
    # See https://blog.hypriot.com/post/new-docker-ui-portainer/
    #######################################
    #    portainer:
    #        build:
    #            context: ./services/portainer
    #            dockerfile: Dockerfile.portainer
    #        ports:
    #          - "9000:9000"
    #        volumes:
    #            - /var/run/docker.sock:/var/run/docker.sock
    #            - ./data/portainer:/data
    #        restart: unless-stopped


