version: '3.2'



services:

#  streamer-rtsp:
#    build:
#      context: ./services/streamer-rtsp
#      dockerfile: Dockerfile.streamer-rtsp
#    ports:
#      - "9000:9000"
#    devices:
#      - "/dev/video0"
#      - "/dev/vchiq"
#      - "/dev/vcsm"
#    volumes:
#      - "/opt/vc:/opt/vc"
#    privileged: true

#  streamer-mjpg:
#    build:
#      context: ./services/streamer-mjpeg
#      dockerfile: Dockerfile.streamer-mjpg
#    ports:
#      - "9000:9000"
#    privileged: true
#    environment:
#      - STREAM_PORT=9000
#      - STREAM_WIDTH=1280
#      - STREAM_HEIGHT=720
#      - STREAM_FPS=10
#    restart: always


  kerberos:
    build:
      context: ./services/kerberos
      dockerfile: Dockerfile.kerberos
    ports:
      - "80:80"
      - "8889:8889"
    volumes:
      - ./configs/kerberos:/etc/opt/kerberosio/config
      - ./logs/kerberos:/etc/opt/kerberosio/logs
      - ./data/kerberos/capture:/etc/opt/kerberosio/capture
      - ./data/kerberos/h264:/etc/opt/kerberosio/h264
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
#    links:
#      - webhook-php
    privileged: true
    restart: always

#  webhook-php:
#    build:
#      context: ./services/webhook-php
#      dockerfile: Dockerfile.webhook-php
#    ports:
#      - "8080:8080"
#    volumes:
#     - /etc/timezone:/etc/timezone:ro
#     - /etc/localtime:/etc/localtime:ro
#    restart: always

#  cadvisor:
#    image: unibaktr/cadvisor
#    ports:
#      - "8090:8080"
#    privileged: true
#    volumes:
#     - /:/rootfs:ro
#     - /var/run:/var/run:rw
#     - /sys:/sys:ro
#     - /var/lib/docker/:/var/lib/docker:ro
#     - /dev/disk/:/dev/disk:ro
#     - /etc/timezone:/etc/timezone:ro
#     - /etc/localtime:/etc/localtime:ro
#    restart: always

  mqtt-server:
    build:
      context: ./services/mqtt-server
      dockerfile: Dockerfile.mqtt-server
    ports:
      - "1883:1883"
    volumes:
     - /etc/timezone:/etc/timezone:ro
     - /etc/localtime:/etc/localtime:ro
    restart: always

#  mqtt-listener-php:
#    build:
#      context: ./mqtt-listener-php
#      dockerfile: Dockerfile.mqtt-listener-php
#    volumes:
#     - ./mqtt-listener-php/code:/code
#     - /etc/timezone:/etc/timezone:ro
#     - /etc/localtime:/etc/localtime:ro
#    restart: always

  mqtt-listener-mailer-php:
    build:
      context: ./services/mqtt-listener-mailer-php
      dockerfile: Dockerfile.mqtt-listener-mailer-php
    volumes:
     - ./services/mqtt-listener-mailer-php/code:/code
     - ./data/kerberos/capture:/etc/opt/kerberosio/capture
     - /etc/timezone:/etc/timezone:ro
     - /etc/localtime:/etc/localtime:ro
    environment:
     - KD_SYSTEM_NAME=${KD_SYSTEM_NAME}
     - KD_REMOTE_SMTP_HOST=${KD_REMOTE_SMTP_HOST}
     - KD_REMOTE_SMTP_PORT=${KD_REMOTE_SMTP_PORT}
     - KD_REMOTE_SMTP_USERNAME=${KD_REMOTE_SMTP_USERNAME}
     - KD_REMOTE_SMTP_PASSWORD=${KD_REMOTE_SMTP_PASSWORD}
     - KD_REMOTE_SMTP_SECURE_METHOD=${KD_REMOTE_SMTP_SECURE_METHOD}
     - KD_REMOTE_SMTP_FROM=${KD_REMOTE_SMTP_FROM}
     - KD_EMAIL_NOTIFICATION_RECIPIENT=${KD_EMAIL_NOTIFICATION_RECIPIENT}
    restart: always

  health-reporter:
    build:
      context: ./services/health-reporter
      dockerfile: Dockerfile.health-reporter
    volumes:
     - /etc/timezone:/etc/timezone:ro
     - /etc/localtime:/etc/localtime:ro
    privileged: true
    restart: always


#  kerberos-dist:
#    build:
#      context: ./services/kerberos-dist
#      dockerfile: Dockerfile.kerberos-dist
#    ports:
#      - "80:80"
#      - "8889:8889"
#    volumes:
#      - "./data/config:/etc/opt/kerberosio/config"
#      - "./data/logs:/etc/opt/kerberosio/logs"
#      - "./data/capture:/etc/opt/kerberosio/capture"
#      - "./data/h264:/etc/opt/kerberosio/h264"
#    privileged: true
##    links:
##      - streamer-mjpg
##    restart: always


  #######################################
  # UI for containers
  # See https://blog.hypriot.com/post/new-docker-ui-portainer/
  #######################################
  docker-ui:
#    image: hypriot/rpi-dockerui
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data
    ports:
      - 82:9000

